import motor

import tornado.gen
import tornado.ioloop
import tornado.web


class CategoryHandler(tornado.web.RequestHandler):
    def get(self, category):
        self.write("Category: %s\n" % category)


class IdentifierHandler(tornado.web.RequestHandler):
    def get(self, category, identifier):
        self.write("Category: %s\nIdentifier: %s\n" % (category, identifier))


class KeywordHandler(tornado.web.RequestHandler):
    @tornado.gen.coroutine
    def get(self, category, identifier, keyword):
        self.write("DB: %s\n" % self.settings['db'])
        self.write("Category: %s\nIdentifier: %s\nKeyword: %s\n" % (category, identifier, keyword))


db = motor.MotorClient().open_sync().test
application = tornado.web.Application([
    (r"/(.*?)/(.*?)/(.*)", KeywordHandler),
    (r"/(.*?)/(.*?)", IdentifierHandler),
    (r"/(.*?)", CategoryHandler),
],
db=db)


if __name__ == "__main__":
    print 'Listening on http://localhost:8888'
    application.listen(8888)
    tornado.ioloop.IOLoop.instance().start()
